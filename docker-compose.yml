version: "3.8"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    expose:
      - 8000
    ports:
      - 8000:8000
    depends_on:
      - db
    volumes:
      - .:/usr/src/app/
    command: bash -c "
      python manage.py makemigrations && 
      python manage.py migrate &&
      python manage.py createsuperuser --noinput || true &&
      python manage.py runserver 0.0.0.0:8000"
  db:
    image: postgis/postgis:latest
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}

  redis:
    image: redis:alpine
    env_file:
      - .env
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_CACHES=${REDIS_CACHES}

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A news_and_places worker --loglevel=info
    volumes:
      - .:/usr/src/app
    depends_on:
      - redis
      - db

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A news_and_places beat --loglevel=info
    depends_on:
      - redis
      - db

volumes:
  postgres-data:
